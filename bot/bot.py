from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config import TOKEN

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

menu = ReplyKeyboardMarkup(resize_keyboard=True)
but1 = KeyboardButton("–û –Ω–∞—Å")
but2 = KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞ üìã")
menu.add(but1, but2)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}!</b>\n"
                                                 f"–Ø –±–æ—Ç —Ñ–æ—Ä—É–º–∞ <b>MRM</b>. –ú–æ–∂–µ—à—å –∑–≤–∞—Ç—å –º–µ–Ω—è <b>CMR</b>.\n"
                                                 f"–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                           parse_mode=ParseMode.HTML, reply_markup=menu)


@dp.message_handler()
async def text_handler(message: types.Message):
    if message.text == "–û –Ω–∞—Å":
        await bot.send_message(message.from_user.id, f"–ö—Ç–æ <b>–º—ã?</b>:\n\n"
                                                     f"–û–±—â–µ–¥–æ—Å—Ç—É–ø–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ <b>MRM</b>, <i>–æ—Å–Ω–æ–≤–∞–Ω–Ω–∞ –≤ 2021 –≥–æ–¥—É</i>.\n"
                                                     f"MRM - —Ñ–æ—Ä—É–º, —á—Ç–æ–±—ã:\n"
                                                     f"  ‚ñ™Ô∏è<i>–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏</i>\n"
                                                     f"  ‚ñ™Ô∏è<i>–∏–∑—É—á–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ</i>\n"
                                                     f"  ‚ñ™Ô∏è<i>–∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã</i>",
                               parse_mode=ParseMode.HTML)
    elif message.text == "–ü—Ä–∞–≤–∏–ª–∞ üìã":
        await bot.send_message(message.from_user.id, f"–ü—Ä–∞–≤–∏–ª–∞ <b>MRM</b> üìã:\n"
                                                     f"  ‚ñ™Ô∏è<i>–∫–æ–Ω—Ç–µ–Ω—Ç 18+ –∑–∞–ø—Ä–µ—â—ë–Ω</i>\n"
                                                     f"  ‚ñ™Ô∏è<i>–ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ç–µ–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ</i>\n"
                                                     f"  ‚ñ™Ô∏è<i>—Ñ–ª—É–¥ –∑–∞–ø—Ä–µ—â—ë–Ω</i>\n"
                                                     f"  ‚ñ™Ô∏è<i>–ø–µ—Ä–µ–¥ —Å–æ–¥–∞–Ω–∏–µ–º —Ç–µ–º—ã, —Å–ª–µ–¥—É–µ—Ç —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Ç–∞–∫–æ–π –µ—â—ë –Ω–µ—Ç.</i>\n",
                               parse_mode=ParseMode.HTML)

if __name__ == '__main__':
    executor.start_polling(dp)
